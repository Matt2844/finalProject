[{"/Users/matthewford/lighthouse/finalProject/client/src/index.js":"1","/Users/matthewford/lighthouse/finalProject/client/src/reportWebVitals.js":"2","/Users/matthewford/lighthouse/finalProject/client/src/App.jsx":"3","/Users/matthewford/lighthouse/finalProject/client/src/components/ItemDropDown.js":"4","/Users/matthewford/lighthouse/finalProject/client/src/components/Home.jsx":"5","/Users/matthewford/lighthouse/finalProject/client/src/components/NavBar.jsx":"6","/Users/matthewford/lighthouse/finalProject/client/src/components/NavMenu.jsx":"7","/Users/matthewford/lighthouse/finalProject/client/src/components/Register.jsx":"8"},{"size":500,"mtime":1610731485622,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610730806309,"results":"11","hashOfConfig":"10"},{"size":1287,"mtime":1610911999711,"results":"12","hashOfConfig":"10"},{"size":11599,"mtime":1610919372798,"results":"13","hashOfConfig":"10"},{"size":1700,"mtime":1610896570494,"results":"14","hashOfConfig":"10"},{"size":302,"mtime":1610896570495,"results":"15","hashOfConfig":"10"},{"size":1348,"mtime":1610896570496,"results":"16","hashOfConfig":"10"},{"size":3557,"mtime":1610906429203,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3mmb6o",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"/Users/matthewford/lighthouse/finalProject/client/src/index.js",[],"/Users/matthewford/lighthouse/finalProject/client/src/reportWebVitals.js",[],"/Users/matthewford/lighthouse/finalProject/client/src/App.jsx",["36","37"],"/Users/matthewford/lighthouse/finalProject/client/src/components/ItemDropDown.js",["38","39"],"/Users/matthewford/lighthouse/finalProject/client/src/components/Home.jsx",["40"],"/Users/matthewford/lighthouse/finalProject/client/src/components/NavBar.jsx",["41"],"/Users/matthewford/lighthouse/finalProject/client/src/components/NavMenu.jsx",["42","43","44"],"/Users/matthewford/lighthouse/finalProject/client/src/components/Register.jsx",["45","46","47","48"],"import React, { useState } from 'react';\nimport NavMenu from './NavMenu'\n\nexport default function Register(props) {\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    city: \"\",\n  }) \n\n  const [error, setError] = useState(\"\");\n\n  // Update user state based on their input\n  const handleChange = (e) => {\n    console.log(e.target.value)\n    const { id, value } = e.target\n    setState(prev => ({\n      ...prev, \n      [id] : value\n    }))\n  }\n\n\n const onSubmit = (e) => {\n   e.preventDefault();\n   const userData = {\n     \"firstName\": state.firstName,\n     \"lastName\": state.lastName,\n     \"email\": state.email,\n     \"password\": state.password,\n     \"phoneNumber\": state.phoneNumber,\n     \"address\": state.address,\n     \"city\": state.city\n   }\n  }\n\n\n\n  return (\n  <div className=\"register-page\">\n    <div className=\"home-nav\">\n        <img className=\"logo\" style={{ \"height\": \"60px\", \"width\": \"60px\" }}></img>\n        <div className=\"dropdown-bars\">\n          <NavMenu />\n        </div>\n      </div>\n    <video autoPlay loop muted id=\"background-video\">\n        <source src=\"/video/bread.mp4\" type=\"video/mp4\" />\n      </video>\n    <div className=\"register\">\n      <form className=\"register-form\" action=\"/register\" method=\"POST\">\n        <h1 className=\"register-title\">register</h1>\n        <span>\n          <label for=\"firstName\"></label>\n          <input \n            name=\"firstName\" \n            type=\"text\"  \n            placeholder=\"First Name\"\n            value={state.firstName}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"lastName\"></label>\n          <input \n            name=\"lastName\" \n            type=\"text\"  \n            placeholder=\"Last Name\"\n            value={state.lasttName}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"email\"></label>\n          <input \n            name=\"email\" \n            type=\"text\"  \n            placeholder=\"Email\"\n            value={state.email}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"password\"></label>\n          <input \n            name=\"password\" \n            type=\"text\"  \n            placeholder=\"Password\"\n            value={state.password}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"address\"></label>\n          <input \n            name=\"address\" \n            type=\"text\"  \n            placeholder=\"Address\"\n            value={state.address}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"city\"></label>\n          <input \n            name=\"city\" \n            type=\"text\"  \n            placeholder=\"City\"\n            value={state.city}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"phoneNumber\"></label>\n          <input \n            name=\"phoneNumber\" \n            type=\"number\"  \n            placeholder=\"Phone Number\"\n            value={state.phoneNumber}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <div className=\"button-register\">\n          <button type=\"submit\" class=\"submit-button\" onClick={onSubmit}>Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n    )\n  }\n",["49","50"],{"ruleId":"51","severity":1,"message":"52","line":3,"column":17,"nodeType":"53","messageId":"54","endLine":3,"endColumn":26},{"ruleId":"51","severity":1,"message":"55","line":18,"column":3,"nodeType":"53","messageId":"54","endLine":18,"endColumn":7},{"ruleId":"51","severity":1,"message":"56","line":23,"column":7,"nodeType":"53","messageId":"54","endLine":23,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":83,"column":18,"nodeType":"59","messageId":"60","endLine":83,"endColumn":20},{"ruleId":"61","severity":1,"message":"62","line":14,"column":9,"nodeType":"63","endLine":14,"endColumn":103},{"ruleId":"61","severity":1,"message":"62","line":7,"column":7,"nodeType":"63","endLine":7,"endColumn":98},{"ruleId":"51","severity":1,"message":"64","line":7,"column":20,"nodeType":"53","messageId":"54","endLine":7,"endColumn":26},{"ruleId":"51","severity":1,"message":"65","line":8,"column":3,"nodeType":"53","messageId":"54","endLine":8,"endColumn":9},{"ruleId":"51","severity":1,"message":"66","line":9,"column":3,"nodeType":"53","messageId":"54","endLine":9,"endColumn":8},{"ruleId":"51","severity":1,"message":"67","line":15,"column":10,"nodeType":"53","messageId":"54","endLine":15,"endColumn":15},{"ruleId":"51","severity":1,"message":"68","line":15,"column":17,"nodeType":"53","messageId":"54","endLine":15,"endColumn":25},{"ruleId":"51","severity":1,"message":"69","line":30,"column":10,"nodeType":"53","messageId":"54","endLine":30,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":46,"column":9,"nodeType":"63","endLine":46,"endColumn":77},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'StyledMenu' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'userData' is assigned a value but never used.","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-global-assign","no-unsafe-negation"]