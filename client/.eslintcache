[{"/Users/matthewford/lighthouse/finalProject/client/src/index.js":"1","/Users/matthewford/lighthouse/finalProject/client/src/reportWebVitals.js":"2","/Users/matthewford/lighthouse/finalProject/client/src/App.jsx":"3","/Users/matthewford/lighthouse/finalProject/client/src/components/ItemDropDown.js":"4","/Users/matthewford/lighthouse/finalProject/client/src/components/Home.jsx":"5","/Users/matthewford/lighthouse/finalProject/client/src/components/NavBar.jsx":"6","/Users/matthewford/lighthouse/finalProject/client/src/components/NavMenu.jsx":"7","/Users/matthewford/lighthouse/finalProject/client/src/components/Register.jsx":"8"},{"size":500,"mtime":1610731485622,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610730806309,"results":"11","hashOfConfig":"10"},{"size":1364,"mtime":1610906429201,"results":"12","hashOfConfig":"10"},{"size":12433,"mtime":1610906391219,"results":"13","hashOfConfig":"10"},{"size":1700,"mtime":1610896570494,"results":"14","hashOfConfig":"10"},{"size":302,"mtime":1610896570495,"results":"15","hashOfConfig":"10"},{"size":1348,"mtime":1610896570496,"results":"16","hashOfConfig":"10"},{"size":3557,"mtime":1610906429203,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3mmb6o",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/Users/matthewford/lighthouse/finalProject/client/src/index.js",[],"/Users/matthewford/lighthouse/finalProject/client/src/reportWebVitals.js",[],"/Users/matthewford/lighthouse/finalProject/client/src/App.jsx",["37","38"],"/Users/matthewford/lighthouse/finalProject/client/src/components/ItemDropDown.js",["39","40"],"import React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// For the swipeable drawer that has all the items\nimport clsx from 'clsx';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function ItemDropDown () {\n  const [showAll, setShowAll] = useState(true);\n  const [showEggs, setShowEggs] = useState(false);\n  const [showBread, setShowBread] = useState(false);\n  const [showCheese, setShowCheese] = useState(false);\n  const [showFruit, setShowFruit] = useState(false);\n  const [showVegetables, setShowVegetables] = useState(false);\n  const [showMeat, setShowMeat] = useState(false);\n  const [showDrinks, setShowDrinks] = useState(false);\n  const [showSnacks, setShowSnacks] = useState(false);\n  const [showDesserts, setShowDesserts] = useState(false);\n  const [showOther, setShowOther] = useState(false);\n\n\n  // For the bottom drawer that holds the items\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    bottom: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  // This helps set the state when choosing a food category. \n  const getCategory = (category) => {\n\n    if (category == 'All') {\n      setShowAll(true)\n    } else if (category !== 'All') {\n      setShowAll(false)\n    }\n\n    if (category === 'Eggs') {\n      setShowEggs(true);\n    } else if (category !== 'Eggs') {\n      setShowEggs(false);\n    }\n\n    if (category === 'Bread') {\n      setShowBread(true)\n    } else if (category !== 'Bread') {\n      setShowBread(false)\n    }\n\n    if (category === 'Cheese') {\n      setShowCheese(true)\n    } else if (category !== 'Cheese') {\n      setShowCheese(false)\n    }\n\n    if (category === 'Fruit') {\n      setShowFruit(true)\n    } else if (category !== 'Fruit') {\n      setShowFruit(false)\n    }\n\n    if (category === 'Vegetables') {\n      setShowVegetables(true)\n    } else if (category !== 'Vegetables') {\n      setShowVegetables(false)\n    }\n\n    if (category === 'Meat') {\n      setShowMeat(true)\n    } else if (category !== 'Meat') {\n      setShowMeat(false)\n    }\n\n    if (category === 'Drinks') {\n      setShowDrinks(true)\n    } else if (category !== 'Drinks') {\n      setShowDrinks(false)\n    }\n\n    if (category === 'Snacks') {\n      setShowSnacks(true)\n    } else if (category !== 'Snacks') {\n      setShowSnacks(false)\n    }\n\n    if (category === 'Desserts') {\n      setShowDesserts(true)\n    } else if (category !== 'Desserts') {\n      setShowDesserts(false)\n    }\n\n    if (category === 'Other') {\n      setShowOther(true)\n    } else if (category !== 'Other') {\n      setShowOther(false)\n    }\n\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n\n    >\n      <section className=\"pop-up-menu\">\n        <div className=\"food-categories\">\n          <StyledMenuItem onClick={() => getCategory('All')}>\n            <ListItemIcon>\n              <img className=\"egg-icon\" src=\"./images/egg.png\" alt=\"egg\" />\n            </ListItemIcon>\n            <ListItemText primary=\"All\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Eggs')}>\n            <ListItemIcon>\n              <img className=\"egg-icon\" src=\"./images/egg.png\" alt=\"egg\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Eggs\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Bread')}>\n            <ListItemIcon>\n              <img className=\"bread-icon\" src=\"./images/bread.png\" alt=\"bread\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Bread\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Cheese')}>\n            <ListItemIcon>\n              <img className=\"cheese-icon\" src=\"./images/cheese.png\" alt=\"cheese\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Cheese\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Fruit')}>\n            <ListItemIcon>\n              <img className=\"fruits-icon\" src=\"./images/fruits.png\" alt=\"fruit\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Fruit\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Vegetables')}>\n            <ListItemIcon>\n              <img className=\"vegetable-icon\" src=\"./images/vegetable.png\" alt=\"vegetable\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Vegetables\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Meat')}>\n            <ListItemIcon>\n              <img className=\"meat-icon\" src=\"./images/meat.png\" alt=\"meat\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Meat\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Drinks')}>\n            <ListItemIcon>\n              <img className=\"drinks-icon\" src=\"./images/juice.png\" alt=\"juice\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Drinks\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Snacks')}>\n            <ListItemIcon>\n              <img className=\"snacks-icon\" src=\"./images/potato-chips.png\" alt=\"snacks\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Snacks\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Desserts')}>\n            <ListItemIcon>\n              <img className=\"desserts-icon\" src=\"./images/cake-slice.png\" alt=\"desserts\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Desserts\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Other')}>\n            <ListItemIcon>\n              <img className=\"packages-icon\" src=\"./images/packages.png\" alt=\"other\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Other\" />\n          </StyledMenuItem>\n        </div>\n\n\n        <section className=\"food-item-list\">\n\n          {showAll === true ? (\n            <div>\n              <div className=\"product-wrapper\">\n                <div className=\"product-image-section\">\n                  <img src=\"./images/citrus.jpeg\" alt=\"citrus\" />\n                  <button>Add</button>\n                </div>\n                <h3>Product Title</h3>\n                <h5>From Store Name</h5>\n                <span>$1.99</span>\n              </div>\n\n\n\n              <div className=\"product-wrapper\">\n                <div className=\"product-image-section\">\n                  <img src=\"./images/citrus.jpeg\" alt=\"citrus\" />\n                  <button>Add</button>\n                </div>\n                <h3>Product Title</h3>\n                <h5>From Store Name</h5>\n                <span>$1.99</span>\n              </div>\n\n\n\n              <div className=\"product-wrapper\">\n                <div className=\"product-image-section\">\n                  <img src=\"./images/citrus.jpeg\" alt=\"citrus\" />\n                  <button>Add</button>\n                </div>\n                <h3>Product Title</h3>\n                <h5>From Store Name</h5>\n                <span>$1.99</span>\n              </div>\n\n\n\n              <div className=\"product-wrapper\">\n                <div className=\"product-image-section\">\n                  <img src=\"./images/citrus.jpeg\" alt=\"citrus\" />\n                  <button>Add</button>\n                </div>\n                <h3>Product Title</h3>\n                <h5>From Store Name</h5>\n                <span>$1.99</span>\n              </div>\n\n\n            </div>\n          ) : null}\n\n          {showEggs === true ? (\n\n            <div>\n              <article className=\"product-display\">\n                <div className=\"product-wrapper\">\n                  <div className=\"product-image-section\">\n                    <img src=\"./images/citrus.jpeg\" alt=\"citrus\" />\n                    <button>Add</button>\n                  </div>\n                  <h3>Product Title</h3>\n                  <h5>From Store Name</h5>\n                  <span>$1.99</span>\n                </div>\n              </article>\n\n              <article className=\"product-display\">\n                <div className=\"product-wrapper\">\n                  <div className=\"product-image-section\">\n                    <img src=\"./images/citrus.jpeg\" alt=\"citrus\" />\n                    <button>Add</button>\n                  </div>\n                  <h3>Product Title</h3>\n                  <h5>From Store Name</h5>\n                  <span>$1.99</span>\n                </div>\n              </article>\n\n              <article className=\"product-display\">\n                <div className=\"product-wrapper\">\n                  <div className=\"product-image-section\">\n                    <img src=\"./images/citrus.jpeg\" alt=\"citrus\" />\n                    <button>Add</button>\n                  </div>\n                  <h3>Product Title</h3>\n                  <h5>From Store Name</h5>\n                  <span>$1.99</span>\n                </div>\n              </article>\n\n              <article className=\"product-display\">\n                <div className=\"product-wrapper\">\n                  <div className=\"product-image-section\">\n                    <img src=\"./images/citrus.jpeg\" alt=\"citrus\" />\n                    <button>Add</button>\n                  </div>\n                  <h3>Product Title</h3>\n                  <h5>From Store Name</h5>\n                  <span>$1.99</span>\n                </div>\n              </article>\n\n            </div>\n\n\n          ) : null}\n\n          {showBread === true ? (\n            <div>this is the BREAD category</div>\n          ) : null}\n\n          {showCheese === true ? (\n            <div>this is the CHEESE category</div>\n          ) : null}\n\n          {showFruit === true ? (\n            <div>this is the FRUIT category</div>\n          ) : null}\n\n          {showVegetables === true ? (\n            <div>this is the VEGETABLES category</div>\n          ) : null}\n\n          {showMeat === true ? (\n            <div>this is the MEAT category</div>\n          ) : null}\n\n          {showDrinks === true ? (\n            <div>this is the DRINKS category</div>\n          ) : null}\n\n          {showSnacks === true ? (\n            <div>this is the SNACKS category</div>\n          ) : null}\n\n          {showDesserts === true ? (\n            <div>this is the DESSERTS category</div>\n          ) : null}\n\n          {showOther === true ? (\n            <div>this is the OTHER category</div>\n          ) : null}\n\n\n\n\n        </section>\n\n      </section>\n    </div>\n  );\n\n  return (\n    <div>\n      <section className=\"map-section\">\n        <img className=\"map-placeholder\" src=\"./images/google-placeholder.png\" alt=\"bread\" />\n      </section>\n      <div className=\"open-items-menu\">\n        {['bottom'].map((anchor) => (\n          <React.Fragment key={anchor}>\n            <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n            <SwipeableDrawer\n              anchor={anchor}\n              open={state[anchor]}\n              onClose={toggleDrawer(anchor, false)}\n              onOpen={toggleDrawer(anchor, true)}\n            >\n              {list(anchor)}\n            </SwipeableDrawer>\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\n\n",["41","42"],"/Users/matthewford/lighthouse/finalProject/client/src/components/Home.jsx",["43"],"/Users/matthewford/lighthouse/finalProject/client/src/components/NavBar.jsx",["44"],"/Users/matthewford/lighthouse/finalProject/client/src/components/NavMenu.jsx",["45","46","47"],"/Users/matthewford/lighthouse/finalProject/client/src/components/Register.jsx",["48","49","50","51"],"import React, { useState } from 'react';\nimport NavMenu from './NavMenu'\n\nexport default function Register(props) {\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    city: \"\",\n  }) \n\n  const [error, setError] = useState(\"\");\n\n  // Update user state based on their input\n  const handleChange = (e) => {\n    console.log(e.target.value)\n    const { id, value } = e.target\n    setState(prev => ({\n      ...prev, \n      [id] : value\n    }))\n  }\n\n\n const onSubmit = (e) => {\n   e.preventDefault();\n   const userData = {\n     \"firstName\": state.firstName,\n     \"lastName\": state.lastName,\n     \"email\": state.email,\n     \"password\": state.password,\n     \"phoneNumber\": state.phoneNumber,\n     \"address\": state.address,\n     \"city\": state.city\n   }\n  }\n\n\n\n  return (\n  <div className=\"register-page\">\n    <div className=\"home-nav\">\n        <img className=\"logo\" style={{ \"height\": \"60px\", \"width\": \"60px\" }}></img>\n        <div className=\"dropdown-bars\">\n          <NavMenu />\n        </div>\n      </div>\n    <video autoPlay loop muted id=\"background-video\">\n        <source src=\"/video/bread.mp4\" type=\"video/mp4\" />\n      </video>\n    <div className=\"register\">\n      <form className=\"register-form\" action=\"/register\" method=\"POST\">\n        <h1 className=\"register-title\">register</h1>\n        <span>\n          <label for=\"firstName\"></label>\n          <input \n            name=\"firstName\" \n            type=\"text\"  \n            placeholder=\"First Name\"\n            value={state.firstName}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"lastName\"></label>\n          <input \n            name=\"lastName\" \n            type=\"text\"  \n            placeholder=\"Last Name\"\n            value={state.lasttName}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"email\"></label>\n          <input \n            name=\"email\" \n            type=\"text\"  \n            placeholder=\"Email\"\n            value={state.email}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"password\"></label>\n          <input \n            name=\"password\" \n            type=\"text\"  \n            placeholder=\"Password\"\n            value={state.password}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"address\"></label>\n          <input \n            name=\"address\" \n            type=\"text\"  \n            placeholder=\"Address\"\n            value={state.address}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"city\"></label>\n          <input \n            name=\"city\" \n            type=\"text\"  \n            placeholder=\"City\"\n            value={state.city}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <span>\n          <label for=\"phoneNumber\"></label>\n          <input \n            name=\"phoneNumber\" \n            type=\"number\"  \n            placeholder=\"Phone Number\"\n            value={state.phoneNumber}\n            onChange={handleChange}\n            required\n          />\n        </span>\n        <div className=\"button-register\">\n          <button type=\"submit\" class=\"submit-button\" onClick={onSubmit}>Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n    )\n  }\n",{"ruleId":"52","severity":1,"message":"53","line":3,"column":17,"nodeType":"54","messageId":"55","endLine":3,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":18,"column":3,"nodeType":"54","messageId":"55","endLine":18,"endColumn":7},{"ruleId":"52","severity":1,"message":"57","line":22,"column":7,"nodeType":"54","messageId":"55","endLine":22,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":84,"column":18,"nodeType":"60","messageId":"61","endLine":84,"endColumn":20},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":14,"column":9,"nodeType":"68","endLine":14,"endColumn":103},{"ruleId":"66","severity":1,"message":"67","line":7,"column":7,"nodeType":"68","endLine":7,"endColumn":98},{"ruleId":"52","severity":1,"message":"69","line":7,"column":20,"nodeType":"54","messageId":"55","endLine":7,"endColumn":26},{"ruleId":"52","severity":1,"message":"70","line":8,"column":3,"nodeType":"54","messageId":"55","endLine":8,"endColumn":9},{"ruleId":"52","severity":1,"message":"71","line":9,"column":3,"nodeType":"54","messageId":"55","endLine":9,"endColumn":8},{"ruleId":"52","severity":1,"message":"72","line":15,"column":10,"nodeType":"54","messageId":"55","endLine":15,"endColumn":15},{"ruleId":"52","severity":1,"message":"73","line":15,"column":17,"nodeType":"54","messageId":"55","endLine":15,"endColumn":25},{"ruleId":"52","severity":1,"message":"74","line":30,"column":10,"nodeType":"54","messageId":"55","endLine":30,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":46,"column":9,"nodeType":"68","endLine":46,"endColumn":77},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'StyledMenu' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'userData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]