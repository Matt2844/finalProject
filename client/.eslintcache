[{"/vagrant/finalProject/client/src/index.js":"1","/vagrant/finalProject/client/src/reportWebVitals.js":"2","/vagrant/finalProject/client/src/App.jsx":"3","/vagrant/finalProject/client/src/components/Home.jsx":"4","/vagrant/finalProject/client/src/components/ItemDropDown.js":"5","/vagrant/finalProject/client/src/components/NavBar.jsx":"6","/vagrant/finalProject/client/src/components/NavMenu.jsx":"7"},{"size":500,"mtime":1610731485000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610730806000,"results":"10","hashOfConfig":"9"},{"size":1450,"mtime":1610855208000,"results":"11","hashOfConfig":"9"},{"size":1700,"mtime":1610856533000,"results":"12","hashOfConfig":"9"},{"size":9882,"mtime":1610853217000,"results":"13","hashOfConfig":"9"},{"size":302,"mtime":1610853217000,"results":"14","hashOfConfig":"9"},{"size":1348,"mtime":1610853527000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"v175fr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/vagrant/finalProject/client/src/index.js",[],["35","36"],"/vagrant/finalProject/client/src/reportWebVitals.js",[],"/vagrant/finalProject/client/src/App.jsx",["37","38"],"import './App.css';\nimport './Shop.css';\nimport React, { useEffect } from 'react';\n// import axios from 'axios';\nimport ItemDropDown from './components/ItemDropDown';\nimport Home from './components/Home';\nimport './components/Home.css';\nimport './components/NavBar.css';\n\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Navbar from './components/NavBar';\n\nexport default function App () {\n  return (\n    <Router>\n      <div>\n\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/shop\">\n            <Shop />\n          </Route>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <nav>\n            <Navbar />\n          </nav>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/checkout\">\n            <Checkout />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nfunction Shop () {\n  return (\n    <div>\n      <h2>The shop local page with map and items</h2>\n      <ItemDropDown />\n    </div>\n\n  )\n}\n\nfunction Login () {\n  return <h2>This is the login page</h2>;\n}\n\nfunction Register () {\n  return <h2>This is the register page</h2>\n}\n\nfunction Checkout () {\n  return <h2>This is the checkout page</h2>\n}\n","/vagrant/finalProject/client/src/components/Home.jsx",["39"],"/vagrant/finalProject/client/src/components/ItemDropDown.js",["40","41"],"import React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// For the swipeable drawer that has all the items\nimport clsx from 'clsx';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function ItemDropDown () {\n  const [showAll, setShowAll] = useState(true);\n  const [showEggs, setShowEggs] = useState(false);\n  const [showBread, setShowBread] = useState(false);\n  const [showCheese, setShowCheese] = useState(false);\n  const [showFruit, setShowFruit] = useState(false);\n  const [showVegetables, setShowVegetables] = useState(false);\n  const [showMeat, setShowMeat] = useState(false);\n  const [showDrinks, setShowDrinks] = useState(false);\n  const [showSnacks, setShowSnacks] = useState(false);\n  const [showDesserts, setShowDesserts] = useState(false);\n  const [showOther, setShowOther] = useState(false);\n\n\n  // For the bottom drawer that holds the items\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    bottom: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  // This helps set the state when choosing a food category. \n  const getCategory = (category) => {\n\n    if (category == 'All') {\n      setShowAll(true)\n    } else if (category !== 'All') {\n      setShowAll(false)\n    }\n\n    if (category === 'Eggs') {\n      setShowEggs(true);\n    } else if (category !== 'Eggs') {\n      setShowEggs(false);\n    }\n\n    if (category === 'Bread') {\n      setShowBread(true)\n    } else if (category !== 'Bread') {\n      setShowBread(false)\n    }\n\n    if (category === 'Cheese') {\n      setShowCheese(true)\n    } else if (category !== 'Cheese') {\n      setShowCheese(false)\n    }\n\n    if (category === 'Fruit') {\n      setShowFruit(true)\n    } else if (category !== 'Fruit') {\n      setShowFruit(false)\n    }\n\n    if (category === 'Vegetables') {\n      setShowVegetables(true)\n    } else if (category !== 'Vegetables') {\n      setShowVegetables(false)\n    }\n\n    if (category === 'Meat') {\n      setShowMeat(true)\n    } else if (category !== 'Meat') {\n      setShowMeat(false)\n    }\n\n    if (category === 'Drinks') {\n      setShowDrinks(true)\n    } else if (category !== 'Drinks') {\n      setShowDrinks(false)\n    }\n\n    if (category === 'Snacks') {\n      setShowSnacks(true)\n    } else if (category !== 'Snacks') {\n      setShowSnacks(false)\n    }\n\n    if (category === 'Desserts') {\n      setShowDesserts(true)\n    } else if (category !== 'Desserts') {\n      setShowDesserts(false)\n    }\n\n    if (category === 'Other') {\n      setShowOther(true)\n    } else if (category !== 'Other') {\n      setShowOther(false)\n    }\n\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n\n    >\n      <section className=\"pop-up-menu\">\n        <div className=\"food-categories\">\n          <StyledMenuItem onClick={() => getCategory('All')}>\n            <ListItemIcon>\n              <img className=\"egg-icon\" src=\"./images/egg.png\" alt=\"egg\" />\n            </ListItemIcon>\n            <ListItemText primary=\"All\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Eggs')}>\n            <ListItemIcon>\n              <img className=\"egg-icon\" src=\"./images/egg.png\" alt=\"egg\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Eggs\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Bread')}>\n            <ListItemIcon>\n              <img className=\"bread-icon\" src=\"./images/bread.png\" alt=\"bread\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Bread\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Cheese')}>\n            <ListItemIcon>\n              <img className=\"cheese-icon\" src=\"./images/cheese.png\" alt=\"cheese\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Cheese\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Fruit')}>\n            <ListItemIcon>\n              <img className=\"fruits-icon\" src=\"./images/fruits.png\" alt=\"fruit\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Fruit\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Vegetables')}>\n            <ListItemIcon>\n              <img className=\"vegetable-icon\" src=\"./images/vegetable.png\" alt=\"vegetable\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Vegetables\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Meat')}>\n            <ListItemIcon>\n              <img className=\"meat-icon\" src=\"./images/meat.png\" alt=\"meat\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Meat\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Drinks')}>\n            <ListItemIcon>\n              <img className=\"drinks-icon\" src=\"./images/juice.png\" alt=\"juice\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Drinks\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Snacks')}>\n            <ListItemIcon>\n              <img className=\"snacks-icon\" src=\"./images/potato-chips.png\" alt=\"snacks\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Snacks\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Desserts')}>\n            <ListItemIcon>\n              <img className=\"desserts-icon\" src=\"./images/cake-slice.png\" alt=\"desserts\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Desserts\" />\n          </StyledMenuItem>\n          <StyledMenuItem onClick={() => getCategory('Other')}>\n            <ListItemIcon>\n              <img className=\"packages-icon\" src=\"./images/packages.png\" alt=\"other\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Other\" />\n          </StyledMenuItem>\n        </div>\n\n\n        <section className=\"food-item-list\">\n\n          {showAll === true ? (\n            <div>\n              <div>ALL food items get displayed here</div>\n              <img className=\"placeholder\" src=\"./images/placeholder1.png\" alt=\"bread\" />\n              <img className=\"placeholder\" src=\"./images/placeholder1.png\" alt=\"bread\" />\n              <img className=\"placeholder\" src=\"./images/placeholder1.png\" alt=\"bread\" />\n              <img className=\"placeholder\" src=\"./images/placeholder1.png\" alt=\"bread\" />\n              <img className=\"placeholder\" src=\"./images/placeholder1.png\" alt=\"bread\" />\n              <img className=\"placeholder\" src=\"./images/placeholder1.png\" alt=\"bread\" />\n              <img className=\"placeholder\" src=\"./images/placeholder1.png\" alt=\"bread\" />\n              <img className=\"placeholder\" src=\"./images/placeholder1.png\" alt=\"bread\" />\n            </div>\n          ) : null}\n\n          {showEggs === true ? (\n            <div>this is the EGGS category</div>\n          ) : null}\n\n          {showBread === true ? (\n            <div>this is the BREAD category</div>\n          ) : null}\n\n          {showCheese === true ? (\n            <div>this is the CHEESE category</div>\n          ) : null}\n\n          {showFruit === true ? (\n            <div>this is the FRUIT category</div>\n          ) : null}\n\n          {showVegetables === true ? (\n            <div>this is the VEGETABLES category</div>\n          ) : null}\n\n          {showMeat === true ? (\n            <div>this is the MEAT category</div>\n          ) : null}\n\n          {showDrinks === true ? (\n            <div>this is the DRINKS category</div>\n          ) : null}\n\n          {showSnacks === true ? (\n            <div>this is the SNACKS category</div>\n          ) : null}\n\n          {showDesserts === true ? (\n            <div>this is the DESSERTS category</div>\n          ) : null}\n\n          {showOther === true ? (\n            <div>this is the OTHER category</div>\n          ) : null}\n\n\n\n\n        </section>\n\n      </section>\n    </div>\n  );\n\n  return (\n    <div>\n      <section className=\"map-section\">\n        <img className=\"map-placeholder\" src=\"./images/google-placeholder.png\" alt=\"bread\" />\n      </section>\n      <div className=\"open-items-menu\">\n        {['bottom'].map((anchor) => (\n          <React.Fragment key={anchor}>\n            <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n            <SwipeableDrawer\n              anchor={anchor}\n              open={state[anchor]}\n              onClose={toggleDrawer(anchor, false)}\n              onOpen={toggleDrawer(anchor, true)}\n            >\n              {list(anchor)}\n            </SwipeableDrawer>\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\n\n","/vagrant/finalProject/client/src/components/NavBar.jsx",["42"],"import NavMenu from './NavMenu'\n\n\nexport default function Navbar () {\n  return (\n    <nav className=\"navbar\">\n      <img className=\"logo\" src=\"./images/egg.png\" style={{ \"height\": \"30px\", \"width\": \"30px\" }}></img>\n      <div className=\"dropdown-bars\">\n        <NavMenu />\n\n      </div>\n    </nav>\n  )\n}","/vagrant/finalProject/client/src/components/NavMenu.jsx",["43","44","45"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './NavMenu.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nexport default function NavMenu () {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Menu\n        </Button>\n      <Menu\n        className=\"menu\"\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div className=\"menu-item\">\n          <MenuItem><Link to=\"/\" onClick={handleClose}>Home</Link></MenuItem>\n          <MenuItem><Link to=\"/login\" onClick={handleClose}>Login</Link></MenuItem>\n          <MenuItem><Link to=\"/register\" onClick={handleClose}>Register</Link></MenuItem>\n          <MenuItem><Link to=\"/checkout\" onClick={handleClose}>Checkout Cart</Link></MenuItem>\n          <MenuItem><Link to=\"/logout\" onClick={handleClose}>Logout</Link></MenuItem>\n        </div>\n      </Menu>\n    </div>\n  );\n}",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":3,"column":17,"nodeType":"52","messageId":"53","endLine":3,"endColumn":26},{"ruleId":"50","severity":1,"message":"54","line":16,"column":3,"nodeType":"52","messageId":"53","endLine":16,"endColumn":7},{"ruleId":"55","severity":1,"message":"56","line":14,"column":9,"nodeType":"57","endLine":14,"endColumn":103},{"ruleId":"50","severity":1,"message":"58","line":22,"column":7,"nodeType":"52","messageId":"53","endLine":22,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":84,"column":18,"nodeType":"61","messageId":"62","endLine":84,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":7,"column":7,"nodeType":"57","endLine":7,"endColumn":98},{"ruleId":"50","severity":1,"message":"63","line":7,"column":20,"nodeType":"52","messageId":"53","endLine":7,"endColumn":26},{"ruleId":"50","severity":1,"message":"64","line":8,"column":3,"nodeType":"52","messageId":"53","endLine":8,"endColumn":9},{"ruleId":"50","severity":1,"message":"65","line":9,"column":3,"nodeType":"52","messageId":"53","endLine":9,"endColumn":8},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'StyledMenu' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]